{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar dummyUser = {\n  nickname: \"서동열\",\n  Post: [],\n  Followings: [],\n  Followers: []\n};\nvar initialState = {\n  isLoggedIn: false,\n  user: null,\n  signUpData: []\n};\nexport var LOG_IN = \"LOG_IN\"; //액숀의 이름\n\nexport var LOG_OUT = \"LOG_OUT\"; //액숀의 이름\n\nexport var loginAction = {\n  type: LOG_IN,\n  data: {\n    nickname: \"제로초\"\n  }\n};\nvar logoutAction = {\n  type: LOG_OUT\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      return _objectSpread({}, state, {\n        isLoggedIn: true,\n        user: dummyUser\n      });\n\n    case LOG_OUT:\n      return _objectSpread({}, state, {\n        isLoggedIn: true,\n        user: action.data\n      });\n\n    case SIGN_UP:\n      return _objectSpread({}, state, {\n        signUpData: action.data\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\coresight2\\Documents\\Visual Studio Code\\react-project\\NodeBird_Project\\front\\reducers\\user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","initialState","isLoggedIn","user","signUpData","LOG_IN","LOG_OUT","loginAction","type","data","logoutAction","reducer","state","action","SIGN_UP"],"mappings":";AAAA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,KADM;AAEhBC,EAAAA,IAAI,EAAE,EAFU;AAGhBC,EAAAA,UAAU,EAAE,EAHI;AAIhBC,EAAAA,SAAS,EAAE;AAJK,CAAlB;AAOA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,UAAU,EAAE;AAHO,CAArB;AAMA,OAAO,IAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AAChC,OAAO,IAAMC,OAAO,GAAG,SAAhB,C,CAA2B;;AAElC,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAEH,MADmB;AAEzBI,EAAAA,IAAI,EAAE;AACJZ,IAAAA,QAAQ,EAAE;AADN;AAFmB,CAApB;AAOP,IAAMa,YAAY,GAAG;AACnBF,EAAAA,IAAI,EAAEF;AADa,CAArB;;AAIA,IAAMK,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBX,YAAyB;AAAA,MAAXY,MAAW;;AAChD,UAAQA,MAAM,CAACL,IAAf;AACE,SAAKH,MAAL;AACE,+BACKO,KADL;AAEEV,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,IAAI,EAAEP;AAHR;;AAKF,SAAKU,OAAL;AACE,+BACKM,KADL;AAEEV,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,IAAI,EAAEU,MAAM,CAACJ;AAHf;;AAKF,SAAKK,OAAL;AACE,+BACKF,KADL;AAEER,QAAAA,UAAU,EAAES,MAAM,CAACJ;AAFrB;;AAIF;AACE,+BACKG,KADL;AAnBJ;AAuBD,CAxBD;;AA0BA,eAAeD,OAAf","sourcesContent":["const dummyUser = {\r\n  nickname: \"서동열\",\r\n  Post: [],\r\n  Followings: [],\r\n  Followers: [],\r\n}\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  user: null,\r\n  signUpData: [],\r\n}\r\n\r\nexport const LOG_IN = \"LOG_IN\"; //액숀의 이름\r\nexport const LOG_OUT = \"LOG_OUT\"; //액숀의 이름\r\n\r\nexport const loginAction = {\r\n  type: LOG_IN,\r\n  data: {\r\n    nickname: \"제로초\",\r\n  }\r\n}\r\n\r\nconst logoutAction = {\r\n  type: LOG_OUT,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: dummyUser,\r\n      }\r\n    case LOG_OUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: action.data,\r\n      }\r\n    case SIGN_UP:\r\n      return {\r\n        ...state,\r\n        signUpData: action.data,\r\n      }\r\n    default:\r\n      return {\r\n        ...state,\r\n      }\r\n  }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}