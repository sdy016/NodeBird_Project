{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Project\\\\React_Project\\\\front\\\\components\\\\PostForm.js\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ADD_POST_REQUEST } from \"../reducers/post\"; //import reducer, { isAddingPost } from '../reducers';\n\nvar PostForm = function PostForm() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost,\n      postAdded = _useSelector.postAdded;\n\n  useEffect(function () {\n    return function () {\n      setText(\"\");\n    };\n  }, [postAdded === true]);\n  var onSubmitForm = useCallback(function (e) {\n    e.preventDefault();\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        content: text\n      }\n    });\n  }, []);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, [text]);\n  return React.createElement(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    value: text,\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), React.createElement(Button, {\n    type: \"primary\",\n    style: {\n      float: \"right\"\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"\\uC9F9\\uC9F9\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, imagePaths.map(function (v) {\n    return React.createElement(\"div\", {\n      key: v,\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"http://localhost:3065/\" + v,\n      style: {\n        width: \"200px\"\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:\\Project\\React_Project\\front\\components\\PostForm.js"],"names":["React","useCallback","useState","useEffect","Form","Input","Button","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","dispatch","text","setText","state","post","imagePaths","isAddingPost","postAdded","onSubmitForm","e","preventDefault","type","data","content","onChangeText","target","value","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ADD_POST_REQUEST } from \"../reducers/post\";\r\n//import reducer, { isAddingPost } from '../reducers';\r\n\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [text, setText] = useState(\"\");\r\n  const { imagePaths, isAddingPost, postAdded } = useSelector(\r\n    state => state.post\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setText(\"\");\r\n    };\r\n  }, [postAdded === true]);\r\n\r\n  const onSubmitForm = useCallback(e => {\r\n    e.preventDefault();\r\n    dispatch({ type: ADD_POST_REQUEST, data: { content: text } });\r\n  }, []);\r\n\r\n  const onChangeText = useCallback(\r\n    e => {\r\n      setText(e.target.value);\r\n    },\r\n    [text]\r\n  );\r\n\r\n  return (\r\n    <Form\r\n      style={{ margin: \"10px 0 20px\" }}\r\n      encType=\"multipart/form-data\"\r\n      onSubmit={onSubmitForm}\r\n    >\r\n      <Input.TextArea\r\n        maxLength={140}\r\n        placeholder=\"어떤 신기한 일이 있었나요?\"\r\n        value={text}\r\n        onChange={onChangeText}\r\n      />\r\n      <div>\r\n        <input type=\"file\" multiple hidden />\r\n        <Button>이미지 업로드</Button>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ float: \"right\" }}\r\n          htmlType=\"submit\"\r\n          loading={isAddingPost}\r\n        >\r\n          짹짹\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map(v => {\r\n          return (\r\n            <div key={v} style={{ display: \"inline-block\" }}>\r\n              <img\r\n                src={\"http://localhost:3065/\" + v}\r\n                style={{ width: \"200px\" }}\r\n                alt={v}\r\n              />\r\n              <div>\r\n                <Button>제거</Button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}