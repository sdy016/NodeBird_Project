{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Avatar, Card } from \"antd\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\nimport PostCard from \"../components/PostCard\";\n\nvar User = function User(_ref) {\n  var id = _ref.id;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_USER_REQUEST,\n      data: id\n    });\n    dispatch({\n      type: LOAD_USER_POSTS_REQUEST,\n      data: id\n    });\n  }, []);\n  return React.createElement(\"div\", null, userInfo ? React.createElement(Card, {\n    actions: [React.createElement(\"div\", {\n      key: \"twit\"\n    }, \"\\uC9F9\\uC9F9\", React.createElement(\"br\", null), userInfo.Posts), React.createElement(\"div\", {\n      key: \"following\"\n    }, \"\\uD314\\uB85C\\uC789\", React.createElement(\"br\", null), userInfo.Followings), React.createElement(\"div\", {\n      key: \"follower\"\n    }, \"\\uD314\\uB85C\\uC6CC\", React.createElement(\"br\", null), userInfo.Followers)]\n  }, React.createElement(Card.Meta, {\n    avatar: React.createElement(Avatar, null, userInfo.nickname[0]),\n    title: userInfo.nickname\n  })) : null, mainPosts.map(function (c) {\n    return React.createElement(PostCard, {\n      key: +c.createdAt,\n      post: c\n    });\n  }));\n};\n\nUser.propTypes = {\n  id: PropTypes.number.isRequired\n};\n\nUser.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              id: _parseInt(context.query.id, 10)\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default User;","map":{"version":3,"sources":["C:\\Project\\React_Project\\front\\pages\\user.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","Avatar","Card","LOAD_USER_POSTS_REQUEST","LOAD_USER_REQUEST","PostCard","User","id","dispatch","state","post","mainPosts","user","userInfo","type","data","Posts","Followings","Followers","nickname","map","c","createdAt","propTypes","number","isRequired","getInitialProps","context","query"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;AACvB,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AADuB,qBAEDC,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFV;AAAA,MAEfC,SAFe,gBAEfA,SAFe;;AAAA,sBAGFX,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAAN,CAHT;AAAA,MAGfC,QAHe,iBAGfA,QAHe;;AAKvBhB,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEV,iBADC;AAEPW,MAAAA,IAAI,EAAER;AAFC,KAAD,CAAR;AAIAC,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,uBADC;AAEPY,MAAAA,IAAI,EAAER;AAFC,KAAD,CAAR;AAID,GATQ,EASN,EATM,CAAT;AAUA,SACE,iCACGM,QAAQ,GACP,oBAAC,IAAD;AACE,IAAA,OAAO,EAAE,CACP;AAAK,MAAA,GAAG,EAAC;AAAT,uBAEE,+BAFF,EAGGA,QAAQ,CAACG,KAHZ,CADO,EAMP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,+BAFF,EAGGH,QAAQ,CAACI,UAHZ,CANO,EAWP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,+BAFF,EAGGJ,QAAQ,CAACK,SAHZ,CAXO;AADX,KAmBE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAE,oBAAC,MAAD,QAASL,QAAQ,CAACM,QAAT,CAAkB,CAAlB,CAAT,CADV;AAEE,IAAA,KAAK,EAAEN,QAAQ,CAACM;AAFlB,IAnBF,CADO,GAyBL,IA1BN,EA2BGR,SAAS,CAACS,GAAV,CAAc,UAAAC,CAAC;AAAA,WACd,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAlB;AAA6B,MAAA,IAAI,EAAED;AAAnC,MADc;AAAA,GAAf,CA3BH,CADF;AAiCD,CAhDD;;AAkDAf,IAAI,CAACiB,SAAL,GAAiB;AACfhB,EAAAA,EAAE,EAAET,SAAS,CAAC0B,MAAV,CAAiBC;AADN,CAAjB;;AAIAnB,IAAI,CAACoB,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEd;AAAEpB,cAAAA,EAAE,EAAE,UAASoB,OAAO,CAACC,KAAR,CAAcrB,EAAvB,EAA2B,EAA3B;AAAN,aAFc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeD,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Avatar, Card } from \"antd\";\r\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\r\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\r\nimport PostCard from \"../components/PostCard\";\r\n\r\nconst User = ({ id }) => {\r\n  const dispatch = useDispatch();\r\n  const { mainPosts } = useSelector(state => state.post);\r\n  const { userInfo } = useSelector(state => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_USER_REQUEST,\r\n      data: id\r\n    });\r\n    dispatch({\r\n      type: LOAD_USER_POSTS_REQUEST,\r\n      data: id\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {userInfo ? (\r\n        <Card\r\n          actions={[\r\n            <div key=\"twit\">\r\n              짹짹\r\n              <br />\r\n              {userInfo.Posts}\r\n            </div>,\r\n            <div key=\"following\">\r\n              팔로잉\r\n              <br />\r\n              {userInfo.Followings}\r\n            </div>,\r\n            <div key=\"follower\">\r\n              팔로워\r\n              <br />\r\n              {userInfo.Followers}\r\n            </div>\r\n          ]}\r\n        >\r\n          <Card.Meta\r\n            avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n            title={userInfo.nickname}\r\n          />\r\n        </Card>\r\n      ) : null}\r\n      {mainPosts.map(c => (\r\n        <PostCard key={+c.createdAt} post={c} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nUser.propTypes = {\r\n  id: PropTypes.number.isRequired\r\n};\r\n\r\nUser.getInitialProps = async context => {\r\n  //Console.log(\"user getInitialProps\", context.query.id);\r\n  return { id: parseInt(context.query.id, 10) };\r\n};\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}