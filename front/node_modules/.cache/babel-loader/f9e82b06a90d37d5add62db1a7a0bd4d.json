{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Project\\\\React_Project\\\\front\\\\pages\\\\hashtag.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../components/PostCard';\n\nvar Hashtag = function Hashtag(_ref) {\n  var tag = _ref.tag;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_HASHTAG_POSTS_REQUEST,\n      data: tag\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, mainPosts.map(function (c) {\n    return React.createElement(PostCard, {\n      key: +c.createdAt,\n      post: c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  }));\n}; // getInitialProps  Next 꺼임. 완전 최초 실행됨 componentDidMount 보다 더 먼저 실행 됨.\n\n\nHashtag.propTypes = {\n  tag: PropTypes.string.isRequired\n}; // NodeBird.getInitialProps 를 통하여 next의 context를 받아 그중 ctx 정보를 전달 받는다.\n\nHashtag.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              tag: context.query.tag\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Hashtag;","map":{"version":3,"sources":["C:\\Project\\React_Project\\front\\pages\\hashtag.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","LOAD_HASHTAG_POSTS_REQUEST","PostCard","Hashtag","tag","dispatch","state","post","mainPosts","type","data","map","c","createdAt","propTypes","string","isRequired","getInitialProps","context","query"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,0BAAT,QAA2C,kBAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAC3B,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAD2B,qBAELC,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFN;AAAA,MAEnBC,SAFmB,gBAEnBA,SAFmB;;AAI3BX,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAER,0BADC;AAEPS,MAAAA,IAAI,EAAEN;AAFC,KAAD,CAAR;AAID,GALQ,EAKN,EALM,CAAT;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,SAAS,CAACG,GAAV,CAAc,UAAAC,CAAC;AAAA,WACd,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAlB;AAA6B,MAAA,IAAI,EAAED,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc;AAAA,GAAf,CADH,CADF;AAOD,CAnBD,C,CAqBA;;;AACAT,OAAO,CAACW,SAAR,GAAoB;AAClBV,EAAAA,GAAG,EAAEN,SAAS,CAACiB,MAAV,CAAiBC;AADJ,CAApB,C,CAIA;;AACAb,OAAO,CAACc,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEjB;AAAEd,cAAAA,GAAG,EAAEc,OAAO,CAACC,KAAR,CAAcf;AAArB,aAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeD,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\r\nimport PostCard from '../components/PostCard';\r\n\r\nconst Hashtag = ({ tag }) => {\r\n  const dispatch = useDispatch();\r\n  const { mainPosts } = useSelector(state => state.post);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_HASHTAG_POSTS_REQUEST,\r\n      data: tag,\r\n    });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      {mainPosts.map(c => (\r\n        <PostCard key={+c.createdAt} post={c} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n// getInitialProps  Next 꺼임. 완전 최초 실행됨 componentDidMount 보다 더 먼저 실행 됨.\r\nHashtag.propTypes = {\r\n  tag: PropTypes.string.isRequired,\r\n};\r\n\r\n// NodeBird.getInitialProps 를 통하여 next의 context를 받아 그중 ctx 정보를 전달 받는다.\r\nHashtag.getInitialProps = async (context) => {\r\n  //console.log('hashtag getInitialProps', context.query.tag);\r\n  return { tag: context.query.tag };\r\n};\r\n\r\nexport default Hashtag;\r\n"]},"metadata":{},"sourceType":"module"}