{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logIn),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogIn),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUp),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignUp),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logOut),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogOut),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadUser),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadUser),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(follow),\n    _marked10 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchFollow),\n    _marked11 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(unFollow),\n    _marked12 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchUnFollow),\n    _marked13 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_USER_SUCCESS } from '../reducers/user';\n\nfunction logInAPI(loginData) {\n  // 서버에 요청을 보내는 부분\n  return axios.post('/user/login', loginData, {\n    withCredentials: true\n  });\n}\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(logInAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction signUpAPI(signUpData) {\n  // 서버에 요청을 보내는 부분\n  return axios.post('/user/', signUpData);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            // put은 dispatch 동일\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 12;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context3.t0);\n          _context3.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction logOutAPI() {\n  // 서버에 요청을 보내는 부분\n  return axios.post('/user/logout', {}, {\n    withCredentials: true\n  });\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(logOutAPI);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            // put은 dispatch 동일\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context5.next = 12;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context5.t0);\n          _context5.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context5.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction loadUserAPI(userId) {\n  console.log('userId: ', userId); // 서버에 요청을 보내는 부분\n\n  return axios.get(userId ? \"/user/\".concat(userId) : '/user/', {\n    withCredentials: true\n  });\n}\n\nfunction loadUser(action) {\n  var _result;\n\n  return _regeneratorRuntime.wrap(function loadUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadUserAPI, action.data);\n\n        case 3:\n          _result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: LOAD_USER_SUCCESS,\n            data: _result.data,\n            me: !action.data\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context7.t0);\n          _context7.next = 13;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context7.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n/**************************************\r\nFollow API\r\n*************************************/\n\n\nfunction followAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.get(\"/user/\".concat(userId, \"/follow\"), {}, {\n    withCredentials: true\n  });\n}\n\nfunction follow(action) {\n  var _result2;\n\n  return _regeneratorRuntime.wrap(function follow$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(followAPI, action.data);\n\n        case 3:\n          _result2 = _context9.sent;\n          _context9.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: FOLLOW_USER_SUCCESS,\n            data: _result2.data\n          });\n\n        case 6:\n          _context9.next = 13;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context9.t0);\n          _context9.next = 13;\n          return put({\n            type: FOLLOW_USER_FAILURE,\n            error: _context9.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(FOLLOW_USER_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n/**************************************\r\nUnFollow API\r\n*************************************/\n\n\nfunction unFollowAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.get(\"/user/\".concat(userId, \"/unfollow\"), {}, {\n    withCredentials: true\n  });\n}\n\nfunction unFollow(action) {\n  var _result3;\n\n  return _regeneratorRuntime.wrap(function unFollow$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(unFollowAPI, action.data);\n\n        case 3:\n          _result3 = _context11.sent;\n          _context11.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: UNFOLLOW_USER_SUCCESS,\n            data: _result3.data\n          });\n\n        case 6:\n          _context11.next = 13;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context11.t0);\n          _context11.next = 13;\n          return put({\n            type: UNFOLLOW_USER_FAILURE,\n            error: _context11.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction watchUnFollow() {\n  return _regeneratorRuntime.wrap(function watchUnFollow$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(UNFOLLOW_USER_REQUEST, unFollow);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return all([fork(watchLogIn), fork(watchLogOut), fork(watchLoadUser), fork(watchSignUp), fork(watchFollow), fork(watchUnFollow)]);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}","map":{"version":3,"sources":["C:\\Users\\coresight2\\Documents\\Visual Studio Code\\react-project\\NodeBird_Project\\front\\sagas\\user.js"],"names":["logIn","watchLogIn","signUp","watchSignUp","logOut","watchLogOut","loadUser","watchLoadUser","follow","watchFollow","unFollow","watchUnFollow","userSaga","all","call","fork","put","takeEvery","axios","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_USER_SUCCESS","logInAPI","loginData","post","withCredentials","action","data","result","type","console","error","signUpAPI","signUpData","logOutAPI","loadUserAPI","userId","log","get","me","followAPI","FOLLOW_USER_FAILURE","FOLLOW_USER_REQUEST","unFollowAPI","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST"],"mappings":"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","sourcesContent":["import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  LOAD_USER_REQUEST,LOAD_USER_SUCCESS,LOAD_USER_FAILURE,\r\n  LOG_IN_REQUEST,LOG_IN_SUCCESS,LOG_IN_FAILURE,\r\n  LOG_OUT_REQUEST,LOG_OUT_SUCCESS,LOG_OUT_FAILURE,\r\n  SIGN_UP_REQUEST,SIGN_UP_SUCCESS,SIGN_UP_FAILURE, FOLLOW_USER_SUCCESS,\r\n} from '../reducers/user';\r\n\r\nfunction logInAPI(loginData) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.post('/user/login', loginData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    yield put({\r\n      // put은 dispatch 동일\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeEvery(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction signUpAPI(signUpData) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.post('/user/', signUpData);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    // yield call(signUpAPI);\r\n    yield call(signUpAPI, action.data);\r\n    yield put({\r\n      // put은 dispatch 동일\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (e) {\r\n    // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction logOutAPI() {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.post(\r\n    '/user/logout',\r\n    {},\r\n    {\r\n      withCredentials: true,\r\n    },\r\n  );\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    // yield call(logOutAPI);\r\n    yield call(logOutAPI);\r\n    yield put({\r\n      // put은 dispatch 동일\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (e) {\r\n    // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction loadUserAPI(userId) {\r\n  console.log('userId: ', userId);\r\n\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.get(userId ? `/user/${userId}` : '/user/', {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* loadUser(action) {\r\n  try {\r\n    // yield call(loadUserAPI);\r\n    const result = yield call(loadUserAPI, action.data);\r\n    yield put({ // put은 dispatch 동일\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n      me: !action.data,\r\n    });\r\n  } catch (e) {\r\n    // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\n\r\n/**************************************\r\nFollow API\r\n*************************************/\r\nfunction followAPI(userId) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.get(`/user/${userId}/follow` , {}, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    // yield call(loadUserAPI);\r\n    const result = yield call(followAPI, action.data);\r\n    yield put({ // put은 dispatch 동일\r\n      type: FOLLOW_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: FOLLOW_USER_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeEvery(FOLLOW_USER_REQUEST, follow);\r\n}\r\n\r\n/**************************************\r\nUnFollow API\r\n*************************************/\r\nfunction unFollowAPI(userId) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.get(`/user/${userId}/unfollow`, {}, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* unFollow(action) {\r\n  try {\r\n    // yield call(loadUserAPI);\r\n    const result = yield call(unFollowAPI, action.data);\r\n    yield put({ // put은 dispatch 동일\r\n      type: UNFOLLOW_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: UNFOLLOW_USER_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchUnFollow() {\r\n  yield takeEvery(UNFOLLOW_USER_REQUEST, unFollow);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchLoadUser),\r\n    fork(watchSignUp),\r\n    fork(watchFollow),\r\n    fork(watchUnFollow),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}