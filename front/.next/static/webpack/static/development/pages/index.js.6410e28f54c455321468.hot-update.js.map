{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.6410e28f54c455321468.hot-update.js","sources":["webpack:///./components/PostForm.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n//import reducer, { isAddingPost } from '../reducers';\r\n\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [text, setText] = useState(state => state.post);\r\n  const { imagePaths, isAddingPost } = useSelector(state => state.post);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch({ type: ADD_POST_REQUEST, data: { text } });\r\n  }, []);\r\n\r\n  return (\r\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\">\r\n      <Input.TextArea\r\n        maxLength={140}\r\n        placeholder=\"어떤 신기한 일이 있었나요?\"\r\n        value={text}\r\n      />\r\n      <div>\r\n        <input type=\"file\" multiple hidden />\r\n        <Button>이미지 업로드</Button>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ float: 'right' }}\r\n          htmlType=\"submit\"\r\n          isLoading={isAddingPost}>\r\n          짹짹\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map(v => {\r\n          return (\r\n            <div key={v} style={{ display: 'inline-block' }}>\r\n              <img\r\n                src={'http://localhost:3065/' + v}\r\n                style={{ width: '200px' }}\r\n                alt={v}\r\n              />\r\n              <div>\r\n                <Button>제거</Button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAEA;AAAA;AAFA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AACA;AACA;;;;A","sourceRoot":""}